{"version":3,"sources":["functions/idToName.js","services/api/administrador.js","../node_modules/@material-ui/icons/esm/Sync.js","containers/Administradores/estilos.module.css","services/functions/administrador.js","forms/forms/administrador.js","forms/forms/editAdministrador.js","containers/Administradores/index.js"],"names":["idToName","list1","id1","list2","id2","map","item","id","op","find","i","fetchAll","a","request","headers","Authorization","getUserToken","axios","post","query","res","isGraphQLError","data","errors","administradores","fetchOne","dados","graphqlQuery","administrador","create","usuario","senha","nome","status","update","del","createSvgIcon","React","createElement","d","module","exports","actions","appState","startLoading","administradorAPI","stopLoading","setError","initialValues","Yup","translate","validationSchema","shape","min","max","required","camposForm","props","config","xs","sm","xl","type","fields","label","family","name","disabled","loading","Administradores","useState","setAdministradores","administradoresA","setAdministradoresA","setAdministrador","linhaSelecionada","setLinhaSelecionada","history","useHistory","location","window","pathname","split","opcoesTabela","click","fetchAdministradoresHandler","icon","Sync","push","AddCircle","opcoesTabelaSelecionada","fetchAdministradorHandler","Edit","Delete","successHandler","goBack","setSuccess","adms","admin","cadAdministradorHandler","values","editAdministradorHandler","delAdministradorHandler","onFormSubmit","formatFormData","newValues","useEffect","admins","idToNameAdministradores","ErrorBoundary","className","estilos","Container","Datatable","colunasKey","colunasTabela","align","numeric","date","disablePadding","fetchedRows","linhasPorPaginaSelecionada","tituloTabela","path","ConfirmModal","action","okButtonClick","ModalForm","tabLabel","camposFormEdit","initialValuesEdit","validationSchemaEdit"],"mappings":"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","file":"static/js/11.1b1ab084.chunk.js","sourcesContent":["const idToName = ([list1, id1], [list2, id2]) => {\r\n\tif (!list1) {\r\n\t\treturn\r\n\t}\r\n\tif (!list2) {\r\n\t\treturn\r\n\t}\r\n\r\n\tconst newList = list1.map((item) => {\r\n\t\tconst id = item[id1]\r\n\r\n\t\tconst op = list2.find((i) => i.id === id)\r\n\r\n\t\tif (!op) {\r\n\t\t\treturn item\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t...item,\r\n\t\t\t[id1]: op[id2],\r\n\t\t}\r\n\t})\r\n\r\n\treturn newList\r\n}\r\n\r\nexport default idToName\r\n","import axios from \"../../config/axios\"\r\nimport { getUserToken } from \"../functions/auth\"\r\nimport isGraphQLError from \"../functions/isGraphQLError\"\r\n\r\nexport const fetchAll = async () => {\r\n  const graphqlQuery = `\r\n\t\t\t{\r\n\t\t\t\tadministradores {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tnome\r\n\t\t\t\t\tstatus\r\n\t\t\t\t\tusuario\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`\r\n  const request = {\r\n    headers: {\r\n      Authorization: \"Bearer \" + getUserToken(),\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post(\"/graphql\", { query: graphqlQuery }, request)\r\n    if (isGraphQLError(res)) {\r\n      throw res.data.errors[0]\r\n    }\r\n\r\n    return res.data.data.administradores\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nexport const fetchOne = async (dados) => {\r\n  const graphqlQuery = `\r\n\t\t{\r\n\t\t\tadministrador(id: \"${dados.id}\") {\r\n\t\t\t\tid\r\n\t\t\t\tusuario\r\n\t\t\t\tnome\r\n\t\t\t\tstatus\r\n\t\t\t}\r\n\t\t}\r\n\t\t`\r\n  const request = {\r\n    headers: {\r\n      Authorization: \"Bearer \" + getUserToken(),\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post(\"/graphql\", { query: graphqlQuery }, request)\r\n    if (isGraphQLError(res)) {\r\n      throw res.data.errors[0]\r\n    }\r\n\r\n    return res.data.data.administrador\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nexport const create = async (dados) => {\r\n  try {\r\n    const graphqlQuery = `\r\n\t\t\tmutation {\r\n\t\t\t\tcadAdministrador(\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tusuario: \"${dados.administrador.usuario}\"\r\n\t\t\t\t\t\tsenha: \"${dados.administrador.senha}\"\r\n\t\t\t\t\t\tnome: \"${dados.administrador.nome}\"\r\n\t\t\t\t\t\tstatus: ${dados.administrador.status}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t`\r\n    const request = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + getUserToken(),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n\r\n    const res = await axios.post(\"/graphql\", { query: graphqlQuery }, request)\r\n    if (isGraphQLError(res)) {\r\n      throw res.data.errors[0]\r\n    }\r\n\r\n    return true\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nexport const update = async (dados) => {\r\n  try {\r\n    const graphqlQuery = `\r\n\t\t\tmutation {\r\n\t\t\t\teditAdministrador(\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid: ${dados.administrador.id}\r\n\t\t\t\t\t\tusuario: \"${dados.administrador.usuario}\"\r\n\t\t\t\t\t\tsenha: \"${dados.administrador.senha}\"\r\n\t\t\t\t\t\tnome: \"${dados.administrador.nome}\"\r\n\t\t\t\t\t\tstatus: ${dados.administrador.status}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t`\r\n    const request = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + getUserToken(),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n\r\n    const res = await axios.post(\"/graphql\", { query: graphqlQuery }, request)\r\n    if (isGraphQLError(res)) {\r\n      throw res.data.errors[0]\r\n    }\r\n\r\n    return true\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nexport const del = async (dados) => {\r\n  const graphqlQuery = `\r\n\t\tmutation {\r\n\t\t\tdelAdministrador(id: \"${dados.administrador.id}\")\r\n\t\t}\r\n\t`\r\n  const request = {\r\n    headers: {\r\n      Authorization: \"Bearer \" + getUserToken(),\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post(\"/graphql\", { query: graphqlQuery }, request)\r\n    if (isGraphQLError(res)) {\r\n      throw res.data.errors[0]\r\n    }\r\n\r\n    return true\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n}\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Sync');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"estilos_Container__2KHl4\"};","import * as administradorAPI from \"../api/administrador\"\r\n\r\nexport const fetchAll = async (actions) => {\r\n  actions.appState.startLoading()\r\n\r\n  try {\r\n    const res = await administradorAPI.fetchAll()\r\n\r\n    actions.appState.stopLoading()\r\n\r\n    return res\r\n  } catch (err) {\r\n    actions.appState.stopLoading()\r\n    actions.appState.setError(err)\r\n  }\r\n\r\n  return\r\n}\r\n\r\nexport const fetchOne = async (actions) => {\r\n  actions.appState.startLoading()\r\n\r\n  try {\r\n    const res = await administradorAPI.fetchOne({\r\n      id: actions.id,\r\n    })\r\n\r\n    actions.appState.stopLoading()\r\n\r\n    return res\r\n  } catch (err) {\r\n    actions.appState.stopLoading()\r\n    actions.appState.setError(err)\r\n  }\r\n\r\n  return\r\n}\r\n\r\nexport const create = async (actions) => {\r\n  actions.appState.startLoading()\r\n\r\n  try {\r\n    await administradorAPI.create({\r\n      administrador: actions.administrador,\r\n    })\r\n\r\n    actions.appState.stopLoading()\r\n\r\n    return true\r\n  } catch (err) {\r\n    actions.appState.stopLoading()\r\n    actions.appState.setError(err)\r\n  }\r\n\r\n  return\r\n}\r\n\r\nexport const update = async (actions) => {\r\n  actions.appState.startLoading()\r\n\r\n  try {\r\n    await administradorAPI.update({\r\n      administrador: actions.administrador,\r\n    })\r\n\r\n    actions.appState.stopLoading()\r\n\r\n    return true\r\n  } catch (err) {\r\n    actions.appState.stopLoading()\r\n    actions.appState.setError(err)\r\n  }\r\n\r\n  return\r\n}\r\n\r\nexport const del = async (actions) => {\r\n  actions.appState.startLoading()\r\n\r\n  try {\r\n    await administradorAPI.del({\r\n      administrador: actions.administrador,\r\n    })\r\n\r\n    actions.appState.stopLoading()\r\n\r\n    return true\r\n  } catch (err) {\r\n    actions.appState.stopLoading()\r\n    actions.appState.setError(err)\r\n  }\r\n\r\n  return\r\n}\r\n","import * as Yup from \"yup\"\r\nimport translate from \"../../config/yup\"\r\nexport const initialValues = {\r\n\tusuario: \"\",\r\n\tsenha: \"\",\r\n\tnome: \"\",\r\n\tstatus: true,\r\n}\r\n\r\nYup.setLocale(translate)\r\nexport const validationSchema = () => {\r\n\treturn Yup.object().shape({\r\n\t\tusuario: Yup.string().min(6).max(30).required(),\r\n\t\tsenha: Yup.string().min(8).max(32),\r\n\t\tnome: Yup.string().min(6).max(60).required(),\r\n\t})\r\n}\r\n\r\nexport const camposForm = (props) => {\r\n\treturn [\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tconfig: { xs: 12, sm: 12, xl: 12 },\r\n\t\t\t\ttype: \"column\",\r\n\t\t\t\tfields: [\r\n\t\t\t\t\t{ type: \"label\", label: \"Informações de login\" },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfamily: \"input\",\r\n\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\tlabel: \"Usuário\",\r\n\t\t\t\t\t\tname: \"usuario\",\r\n\t\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\t\tdisabled: props.loading,\r\n\t\t\t\t\t\t\tmax: 30,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfamily: \"input\",\r\n\t\t\t\t\t\ttype: \"password\",\r\n\t\t\t\t\t\tlabel: \"Senha\",\r\n\t\t\t\t\t\tname: \"senha\",\r\n\t\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\t\tdisabled: props.loading,\r\n\t\t\t\t\t\t\tmax: 32,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfamily: \"input\",\r\n\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\tlabel: \"Nome\",\r\n\t\t\t\t\t\tname: \"nome\",\r\n\t\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\t\tdisabled: props.loading,\r\n\t\t\t\t\t\t\tmax: 60,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfamily: \"input\",\r\n\t\t\t\t\t\ttype: \"checkbox\",\r\n\t\t\t\t\t\tlabel: \"Ativo\",\r\n\t\t\t\t\t\tname: \"status\",\r\n\t\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\t\tdisabled: props.loading,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t]\r\n}\r\n","import * as Yup from \"yup\"\r\nimport translate from \"../../config/yup\"\r\n\r\nexport const initialValues = {\r\n  usuario: \"\",\r\n  senha: \"\",\r\n  nome: \"\",\r\n  status: true,\r\n}\r\n\r\nYup.setLocale(translate)\r\nexport const validationSchema = () => {\r\n  return Yup.object().shape({\r\n    usuario: Yup.string().min(6).max(30).required(),\r\n    senha: Yup.string().min(8).max(32),\r\n    nome: Yup.string().min(6).max(60).required(),\r\n  })\r\n}\r\n\r\nexport const camposForm = (props) => {\r\n  return [\r\n    [\r\n      {\r\n        config: { xs: 12, sm: 12, xl: 12 },\r\n        type: \"column\",\r\n        fields: [\r\n          { type: \"label\", label: \"Informações de login\" },\r\n          {\r\n            family: \"input\",\r\n            type: \"text\",\r\n            label: \"Usuário\",\r\n            name: \"usuario\",\r\n            config: {\r\n              disabled: props.loading,\r\n              max: 30,\r\n            },\r\n          },\r\n          {\r\n            family: \"input\",\r\n            type: \"text\",\r\n            label: \"Nome\",\r\n            name: \"nome\",\r\n            config: {\r\n              disabled: props.loading,\r\n              max: 60,\r\n            },\r\n          },\r\n          {\r\n            family: \"input\",\r\n            type: \"password\",\r\n            label: \"Senha\",\r\n            name: \"senha\",\r\n            config: {\r\n              disabled: props.loading,\r\n              max: 32,\r\n            },\r\n          },\r\n          {\r\n            family: \"input\",\r\n            type: \"checkbox\",\r\n            label: \"Ativo\",\r\n            name: \"status\",\r\n            config: {\r\n              disabled: props.loading,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  ]\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Route, useHistory } from \"react-router-dom\"\r\n\r\nimport { formatFormData } from \"../../forms/functions/form\"\r\nimport * as administradorAPI from \"../../services/functions/administrador\"\r\nimport idToName from \"../../functions/idToName\"\r\nimport ErrorBoundary from \"../../components/ErrorBoundary\"\r\nimport Datatable from \"../../components/Datatable\"\r\nimport ModalForm from \"../../components/ModalForm\"\r\nimport ConfirmModal from \"../../components/UI/ConfirmModal\"\r\nimport {\r\n  initialValues,\r\n  validationSchema,\r\n  camposForm,\r\n} from \"../../forms/forms/administrador\"\r\nimport {\r\n  initialValues as initialValuesEdit,\r\n  validationSchema as validationSchemaEdit,\r\n  camposForm as camposFormEdit,\r\n} from \"../../forms/forms/editAdministrador\"\r\nimport { Edit, AddCircle, Delete, Sync } from \"@material-ui/icons\"\r\nimport estilos from \"./estilos.module.css\"\r\n\r\nconst Administradores = (props) => {\r\n  const { appState } = props\r\n\r\n  const [administradores, setAdministradores] = useState([])\r\n  const [administradoresA, setAdministradoresA] = useState([])\r\n  const [administrador, setAdministrador] = useState(null)\r\n  const [linhaSelecionada, setLinhaSelecionada] = useState(null)\r\n\r\n  const history = useHistory()\r\n  const location = window.location.pathname.split(\"/\")\r\n\r\n  const colunasTabela = [\r\n    {\r\n      id: \"nome\",\r\n      align: \"left\",\r\n      numeric: false,\r\n      date: false,\r\n      disablePadding: false,\r\n      label: \"Nome\",\r\n    },\r\n    {\r\n      id: \"usuario\",\r\n      align: \"left\",\r\n      numeric: false,\r\n      date: false,\r\n      disablePadding: false,\r\n      label: \"Usuário\",\r\n    },\r\n    {\r\n      id: \"status\",\r\n      align: \"left\",\r\n      numeric: false,\r\n      date: false,\r\n      disablePadding: false,\r\n      label: \"Ativo\",\r\n    },\r\n  ]\r\n\r\n  const opcoesTabela = [\r\n    {\r\n      label: \"Sincronizar Dados\",\r\n      click: () => fetchAdministradoresHandler(),\r\n      icon: <Sync />,\r\n    },\r\n    {\r\n      label: \"Novo\",\r\n      click: () => {\r\n        history.push(\"/administradores/novo\")\r\n      },\r\n      icon: <AddCircle />,\r\n    },\r\n  ]\r\n\r\n  const opcoesTabelaSelecionada = [\r\n    {\r\n      label: \"Editar\",\r\n      click: () => {\r\n        fetchAdministradorHandler()\r\n        history.push(\"/administradores/editar\")\r\n      },\r\n      icon: <Edit />,\r\n    },\r\n    {\r\n      label: \"Excluir\",\r\n      click: () => {\r\n        history.push(\"/administradores/excluir\")\r\n      },\r\n      icon: <Delete />,\r\n    },\r\n  ]\r\n\r\n  const idToNameAdministradores = () => {\r\n    const admins = idToName(\r\n      [administradores, \"status\"],\r\n      [\r\n        [\r\n          { id: 1, nome: \"Sim\" },\r\n          { id: 0, nome: \"Não\" },\r\n        ],\r\n        \"nome\",\r\n      ]\r\n    )\r\n\r\n    setAdministradoresA(admins)\r\n  }\r\n\r\n  const successHandler = () => {\r\n    setLinhaSelecionada(null)\r\n    history.goBack()\r\n    fetchAdministradoresHandler()\r\n    appState.setSuccess()\r\n  }\r\n\r\n  const fetchAdministradoresHandler = async () => {\r\n    const adms = await administradorAPI.fetchAll({ appState })\r\n\r\n    setAdministradores(adms)\r\n  }\r\n\r\n  const fetchAdministradorHandler = async () => {\r\n    const admin = await administradorAPI.fetchOne({\r\n      id: linhaSelecionada,\r\n      appState,\r\n    })\r\n\r\n    setAdministrador(admin)\r\n  }\r\n\r\n  const cadAdministradorHandler = async (values) => {\r\n    const res = await administradorAPI.create({\r\n      administrador: values,\r\n      appState,\r\n    })\r\n\r\n    if (res) {\r\n      successHandler()\r\n    }\r\n  }\r\n\r\n  const editAdministradorHandler = async (values) => {\r\n    const res = await administradorAPI.update({\r\n      administrador: {\r\n        ...values,\r\n        id: linhaSelecionada,\r\n      },\r\n      appState,\r\n    })\r\n\r\n    if (res) {\r\n      successHandler()\r\n    }\r\n  }\r\n\r\n  const delAdministradorHandler = async () => {\r\n    const res = await administradorAPI.del({\r\n      administrador: {\r\n        id: linhaSelecionada,\r\n      },\r\n      appState,\r\n    })\r\n\r\n    if (res) {\r\n      successHandler()\r\n    }\r\n  }\r\n\r\n  const onFormSubmit = async (values) => {\r\n    let newValues = await formatFormData(values)\r\n\r\n    if (location[2] === \"novo\") {\r\n      cadAdministradorHandler(newValues)\r\n    } else if (location[2] === \"editar\") {\r\n      editAdministradorHandler(newValues)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAdministradoresHandler()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    idToNameAdministradores()\r\n  }, [administradores])\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className={estilos.Container}>\r\n        <Datatable\r\n          colunasKey={\"id\"}\r\n          colunasTabela={colunasTabela}\r\n          fetchedRows={administradoresA}\r\n          linhasPorPaginaSelecionada={15}\r\n          linhaSelecionada={linhaSelecionada}\r\n          opcoesTabela={opcoesTabela}\r\n          loading={appState.loading}\r\n          opcoesTabelaSelecionada={opcoesTabelaSelecionada}\r\n          setLinhaSelecionada={setLinhaSelecionada}\r\n          tituloTabela={\"Administradores\"}\r\n        />\r\n      </div>\r\n\r\n      <Route path=\"/administradores/excluir\">\r\n        <ConfirmModal\r\n          action={\"delete\"}\r\n          history={history}\r\n          location={location}\r\n          okButtonClick={delAdministradorHandler}\r\n        />\r\n      </Route>\r\n\r\n      <Route path=\"/administradores/novo\">\r\n        <ModalForm\r\n          camposForm={camposForm({ loading: appState.loading })}\r\n          initialValues={initialValues}\r\n          history={history}\r\n          loading={appState.loading}\r\n          location={location}\r\n          onFormSubmit={onFormSubmit}\r\n          tabLabel={[{ label: \"Administrador\" }]}\r\n          validationSchema={validationSchema}\r\n        />\r\n      </Route>\r\n\r\n      <Route path=\"/administradores/editar\">\r\n        {linhaSelecionada ? (\r\n          <ModalForm\r\n            camposForm={camposFormEdit({ loading: appState.loading })}\r\n            initialValues={administrador ? administrador : initialValuesEdit}\r\n            history={history}\r\n            loading={appState.loading}\r\n            location={location}\r\n            onFormSubmit={onFormSubmit}\r\n            tabLabel={[{ label: \"Administrador\" }]}\r\n            validationSchema={validationSchemaEdit}\r\n          />\r\n        ) : null}\r\n      </Route>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n\r\nexport default Administradores\r\n"],"sourceRoot":""}